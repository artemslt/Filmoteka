{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SCCAC,EAAAD,EAAA,S,mEAcA,MAAME,iBAAEC,EAAgBC,eAAEC,EAAcC,SAAEC,GAAaR,EAAAS,KAIjDC,GAmIiBC,EAnIOC,SAASC,KAAKC,cAoIvB,KACV,EAELH,EAAc,IACT,EAEF,EAPT,IAAuBA,EAlIvB,IAAII,EAAeC,EAAAC,aAyCnB,SAASC,EAAyBC,GAC5BH,EAAAI,gBAAgBC,KAAKL,EAAAM,SAwB3BC,eAAkCJ,GAChC,MAAMK,QAiCRD,eAAyCJ,GACvC,MAAMM,EAmBR,SAAyBN,GAGvB,OAFiBH,EAAAI,gBAAgBC,KAAKL,EAAAM,SAASP,GAE/BW,QAAO,CAACC,EAAOC,KAC7B,GAAIA,GAASlB,GAAWS,EAAO,IAAMS,EAAQlB,EAAUS,EACrD,OAAOQ,CAAK,G,CAxBSE,CAAgBV,GAEzC,GAAgC,IAA5BM,EAAiBK,OACnB,OAAO,KAGT,MAAMC,EAAgBN,EAAiBO,KAAIC,IAC3B,EAAA/B,EAAAgC,kBAAiBD,KAIjC,IACE,MAAME,QAAeC,QAAQC,IAAIN,GACjC,OAAO,EAAAO,EAAAC,SAAaJ,E,CACpB,MAAOK,GACPC,QAAQC,IAAIF,EAAEG,Q,EAjDKC,CAA0BzB,GAE/C,GAAIK,EAAQ,CACVhB,EAASqC,UAAYrB,EAGrB,MAAMsB,EAAM9B,EAAAI,gBAAgBC,KAAKL,EAAAM,SAASP,GACvB+B,EAAIhB,QAEvB,EAAAiB,EAAAC,kBAAiB7B,EAAM8B,KAAKC,KAAKJ,EAAIhB,OAASpB,IAC9CE,SACGuC,iBAAiB,qBACjBC,SAAQC,GAAQA,EAAKC,iBAAiB,QAASC,EAAAC,kB,MAElDC,G,CAtCAC,CAAmBvC,IAEnBsC,IAEArD,EAAiBuD,UAAUC,OAAO,kBAW9B5C,EAAAI,gBAAgBC,KAAKL,EAAAM,SACvBuC,oBAAoBC,aAsCxBtD,EAASqC,UAAY,qB,CAZvB,SAASY,IACH1C,IAAiBC,EAAAC,aAIjBF,IAAiBC,EAAA+C,aACnBvD,EAASqC,UAAY,wBAJrBrC,EAASqC,UAAY,oB,CAqDzB,SAASmB,EAAgBC,GAAI,GAC3B7D,EAAiBuD,UAAUC,OA/IJ,kBA+I8BK,GACrD3D,EAAeqD,UAAUC,OAhJF,iBAgJ0BK,E,CA1HnD7D,EAAiBkD,iBAAiB,SAIlC,WACEU,IAEAjD,EAAeC,EAAAC,aAEfC,EAAyB,E,IAR3BZ,EAAegD,iBAAiB,SAWhC,WACEU,GAAgB,GAEhBjD,EAAeC,EAAA+C,WAEf7C,EAAyB,E,gDDlD3BA,EAAyB,GAEzBlB,EAAAS,KAAKyD,cAAcZ,iBAAiB,SAAUd,IACrCA,EAAE2B,OAAOC,QAAQjD,MACtBD,GAA0BsB,EAAE2B,OAAOC,QAAQjD,KAAK","sources":["src/js/library.js","src/js/library-main.js"],"sourcesContent":["import {refs} from './constants/refs';\nimport {renderLibraryMainContent} from './library-main';\nimport './modalCard';\nimport './modalAbout';\nimport './features/upToTop/upToTop';\nimport './features/auth/auth';\n\nrenderLibraryMainContent(1);\n\nrefs.paginationBox.addEventListener('click', (e) => {\n    if (!e.target.dataset.page) return;\n    renderLibraryMainContent(+e.target.dataset.page);\n});","// imports\nimport { getMoviesDetails } from './api/moviedb/getMoviesDetails';\nimport createMarkUp from '../templates/film-cards.hbs';\nimport { refs } from './constants/refs';\nimport {\n  storage,\n  STORAGE,\n  ANON_WATCHED,\n  ANON_QUEUE,\n  localStorageAPI,\n} from './constants/storage';\nimport { createPagination } from './pagination/createPagination';\nimport { onFilmCardClick } from './onFilmCardClick';\n\n// references\nconst { headerWatchedBtn, headerQueueBtn, mainList } = refs;\n\n// variables\nconst ACCENT_BTN_CLASS = 'button--accent';\nconst perPage = choisePerPage(document.body.clientWidth);\nlet libraryQuery = ANON_WATCHED;\n\n// preorders\n// storage[ANON_WATCHED] = [\n//   '154',\n//   '584',\n//   '1254',\n//   '154',\n//   '584',\n//   '1254',\n//   '154',\n//   '584',\n//   '1254',\n//   '154',\n//   '584',\n//   '1254',\n// ];\n// localStorageAPI.save(STORAGE, storage);\n\n// event listeners\nheaderWatchedBtn.addEventListener('click', onClickWatched);\nheaderQueueBtn.addEventListener('click', onClickQueue);\n\n// event listeners functions\nfunction onClickWatched() {\n  accentBtnToggle();\n\n  libraryQuery = ANON_WATCHED;\n\n  renderLibraryMainContent(1);\n}\n\nfunction onClickQueue() {\n  accentBtnToggle(true);\n\n  libraryQuery = ANON_QUEUE;\n\n  renderLibraryMainContent(1);\n}\n\n// functions helpers\nfunction renderLibraryMainContent(page) {\n  if (localStorageAPI.load(STORAGE)) {\n    renderLibraryCards(page);\n  } else {\n    renderEmptyLibrary();\n\n    headerWatchedBtn.classList.toggle('button--accent');\n\n    /*\n    if (!headerWatchedBtn.classList.contains('button--accent')) {\n      headerWatchedBtn.classList.add('button--accent');\n    }\n    if (headerQueueBtn.classList.contains('button--accent')) {\n      headerQueueBtn.classList.remove('button--accent');\n    }\n    */\n\n    if (localStorageAPI.load(STORAGE)) {\n      renderWatchedMarkup(watchedPage);\n    } else {\n      renderEmptyWatched();\n    }\n  }\n}\n\nasync function renderLibraryCards(page) {\n  const markup = await createLibraryCardsdMarkup(page);\n\n  if (markup) {\n    mainList.innerHTML = markup;\n    // place for pagination function\n    \n    const arr = localStorageAPI.load(STORAGE)[libraryQuery];\n    const totalPages = arr.length;\n    // <== renderPagination(page, totalPages) ==>\n    createPagination(page, Math.ceil(arr.length / perPage));\n    document\n      .querySelectorAll('[data-modal-open]')\n      .forEach(card => card.addEventListener('click', onFilmCardClick));\n  } else {\n    renderEmptyLibrary();\n  }\n}\n\nfunction renderEmptyLibrary() {\n  if (libraryQuery === ANON_WATCHED) {\n    mainList.innerHTML = 'Nothing wathed yet';\n    return;\n  }\n  if (libraryQuery === ANON_QUEUE) {\n    mainList.innerHTML = 'Nothing in queue yet';\n    return;\n  }\n}\n\nfunction renderEmptyWatched() {\n  mainList.innerHTML = 'Nothing wathed yet';\n}\n\nasync function createLibraryCardsdMarkup(page) {\n  const filteredCardsArr = filterCardsdArr(page);\n\n  if (filteredCardsArr.length === 0) {\n    return null;\n  }\n\n  const moviePromises = filteredCardsArr.map(el => {\n    const movie = getMoviesDetails(el);\n    return movie;\n  });\n\n  try {\n    const movies = await Promise.all(moviePromises);\n    return createMarkUp(movies);\n  } catch (e) {\n    console.log(e.message);\n  }\n}\n\nfunction filterCardsdArr(page) {\n  const cardsArr = localStorageAPI.load(STORAGE)[libraryQuery];\n\n  return cardsArr.filter((value, index) => {\n    if (index >= perPage * (page - 1) && index < perPage * page) {\n      return value;\n    }\n  });\n}\n\nfunction choisePerPage(screenWidth) {\n  if (screenWidth >= 1280) {\n    return 9;\n  }\n  if (screenWidth < 768) {\n    return 4;\n  }\n  return 8;\n}\n\nfunction accentBtnToggle(p = false) {\n  headerWatchedBtn.classList.toggle(ACCENT_BTN_CLASS, !p);\n  headerQueueBtn.classList.toggle(ACCENT_BTN_CLASS,p);\n}\n\n// exports\nexport { renderLibraryMainContent };\n"],"names":["$8N7ah","parcelRequire","$iaNpe","headerWatchedBtn","$dd78b310be7c5ac9$var$headerWatchedBtn","headerQueueBtn","$dd78b310be7c5ac9$var$headerQueueBtn","mainList","$dd78b310be7c5ac9$var$mainList","refs","$dd78b310be7c5ac9$var$perPage","screenWidth","document","body","clientWidth","$dd78b310be7c5ac9$var$libraryQuery","$jqFpy","ANON_WATCHED","$dd78b310be7c5ac9$export$243b4d1206135091","page","localStorageAPI","load","STORAGE","async","markup","filteredCardsArr","filter","value","index","$dd78b310be7c5ac9$var$filterCardsdArr","length","moviePromises","map","el","getMoviesDetails","movies","Promise","all","$bJAXj","default","e","console","log","message","$dd78b310be7c5ac9$var$createLibraryCardsdMarkup","innerHTML","arr","$gBq5n","createPagination","Math","ceil","querySelectorAll","forEach","card","addEventListener","$kApCy","onFilmCardClick","$dd78b310be7c5ac9$var$renderEmptyLibrary","$dd78b310be7c5ac9$var$renderLibraryCards","classList","toggle","renderWatchedMarkup","watchedPage","ANON_QUEUE","$dd78b310be7c5ac9$var$accentBtnToggle","p","paginationBox","target","dataset"],"version":3,"file":"library.57b522a5.js.map"}